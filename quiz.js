const readline = require('readline');
const fs = require('fs').promises;

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Ñ–∞–π–ª–∞
async function processQuizFile(filePath) {
  try {
    // –ß–∏—Ç–∞–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ —Ñ–∞–π–ª–∞
    const data = await fs.readFile(filePath, 'utf-8');
    
    // –†–∞–∑–±–∏–≤–∞–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –Ω–∞ —Å—Ç—Ä–æ–∫–∏
    const lines = data.split('\n').map(line => line.trim()).filter(line => line !== '');

    const questions = [];
    const answers = [];

    // –ü—Ä–æ—Ö–æ–¥–∏–º –ø–æ –∫–∞–∂–¥–æ–π —Å—Ç—Ä–æ–∫–µ, —á–µ—Ä–µ–¥—É—è –≤–æ–ø—Ä–æ—Å—ã –∏ –æ—Ç–≤–µ—Ç—ã
    for (let i = 0; i < lines.length; i += 2) {
      const question = lines[i];
      const answer = lines[i + 1];
      
      // –î–æ–±–∞–≤–ª—è–µ–º –≤–æ–ø—Ä–æ—Å –∏ –æ—Ç–≤–µ—Ç –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–µ –º–∞—Å—Å–∏–≤—ã
      questions.push(question);
      answers.push(answer);
    }

    console.log('–í–æ–ø—Ä–æ—Å—ã:', questions);
    console.log('–û—Ç–≤–µ—Ç—ã:', answers);
    
    return { questions, answers };
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —á—Ç–µ–Ω–∏–∏ —Ñ–∞–π–ª–∞:', error);
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Ñ–∞–π–ª–∞
processQuizFile('./topics/nighthawk_flashcard_data.txt');
//—Ç—É—Ç –º—ã 
const questionObjects = [];

for (let i = 0; i < questionsArray.length; i++) {
  const questions = questionsArray[i];
  const answers = answersArray[i];
  
  // –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π –æ–±—ä–µ–∫—Ç Question –∏ –¥–æ–±–∞–≤–ª—è–µ–º –µ–≥–æ –≤ –º–∞—Å—Å–∏–≤
  const question = new Question(questions, answers);
  questionObjects.push(question);
}

// –í—ã–≤–æ–¥–∏–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
console.log(questionObjects);




// –ö–ª–∞—Å—Å –¥–ª—è –≤–æ–ø—Ä–æ—Å–∞
class Question {
  constructor(text, correctAnswer) {
    this.text = text;
    this.correctAnswer = correctAnswer.toLowerCase(); // –û–∂–∏–¥–∞–µ—Ç—Å—è "–¥–∞" –∏–ª–∏ "–Ω–µ—Ç"
  }

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ—Ç–≤–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  checkAnswer(userAnswer) {
    return userAnswer.trim().toLowerCase() === this.correctAnswer;
  }
}

// –ö–ª–∞—Å—Å –¥–ª—è –∫–≤–∏–∑–∞
class Quiz {
  constructor(questions) {
    this.questions = questions;
    this.score = 0;
    this.currentQuestionIndex = 0;

    // –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –¥–ª—è –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º
    this.rl = readline.createInterface({
      input: process.stdin,
      output: process.stdout
    });
  }

  // –ó–∞–ø—É—Å–∫ –∫–≤–∏–∑–∞
  start() {
    console.log("–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –∫–≤–∏–∑! –û—Ç–≤–µ—Ç—ã –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å '–¥–∞' –∏–ª–∏ '–Ω–µ—Ç'.");
    this.askNextQuestion();
  }

  // –ó–∞–¥–∞–Ω–∏–µ —Å–ª–µ–¥—É—é—â–µ–≥–æ –≤–æ–ø—Ä–æ—Å–∞
  askNextQuestion() {
    if (this.currentQuestionIndex < this.questions.length) {
      const currentQuestion = this.questions[this.currentQuestionIndex];
      this.rl.question(currentQuestion.text + ' ', (answer) => {
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ—Ç–≤–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        if (currentQuestion.checkAnswer(answer)) {
          console.log('–ü—Ä–∞–≤–∏–ª—å–Ω–æ! üëçüíÉüèª');
          this.score++;
        } else {
          console.log('–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ! üí©');
        }

        // –ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ —Å–ª–µ–¥—É—é—â–µ–º—É –≤–æ–ø—Ä–æ—Å—É
        this.currentQuestionIndex++;
        this.askNextQuestion();
      });
    } else {
      // –ï—Å–ª–∏ –≤–æ–ø—Ä–æ—Å—ã –∑–∞–∫–æ–Ω—á–∏–ª–∏—Å—å, –∑–∞–≤–µ—Ä—à–∞–µ–º –∫–≤–∏–∑
      this.endQuiz();
    }
  }

  // –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ –∫–≤–∏–∑–∞
  endQuiz() {
    console.log(`–ö–≤–∏–∑ –∑–∞–≤–µ—Ä—à—ë–Ω! –í–∞—à —Ä–µ–∑—É–ª—å—Ç–∞—Ç: ${this.score} –∏–∑ ${this.questions.length}`);
    this.rl.close();
  }
}



// // –≤–æ–ø—Ä–æ—Å—ã
// const questions = [
//   new Question('–ß—Ç–æ —è–≤–ª—è–µ—Ç—Å—è –æ—Å–Ω–æ–≤–Ω—ã–º –∏—Å—Ç–æ—á–Ω–∏–∫–æ–º –ø–∏—â–∏ –¥–ª—è –Ω–æ—á–Ω—ã—Ö —è—Å—Ç—Ä–µ–±–æ–≤? ', '–Ω–∞—Å–µ–∫–æ–º—ã–µ'),
//   new Question('–ù–æ—á–Ω—ã–µ —è—Å—Ç—Ä–µ–±—ã —Ç–µ—Å–Ω–æ —Å–≤—è–∑–∞–Ω—ã —Å —è—Å—Ç—Ä–µ–±–∞–º–∏! (–¥–∞/–Ω–µ—Ç)', '–Ω–µ—Ç'),
//   new Question('–ù–æ—á–Ω—ã–µ —è—Å—Ç—Ä–µ–±—ã –≤—å—é—Ç –≥–Ω–µ–∑–¥–∞.(–¥–∞/–Ω–µ—Ç)', '–Ω–µ—Ç'),
//   new Question('–ë—É–ª—å–±–∞—Ç - –¥—Ä—É–≥–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –æ–±—ã–∫–Ω–æ–≤–µ–Ω–Ω–æ–≥–æ –Ω–æ—á–Ω–æ–≥–æ —è—Å—Ç—Ä–µ–±–∞.(–¥–∞/–Ω–µ—Ç)', '–¥–∞'),
//   new Question('–ß—Ç–æ —è–≤–ª—è–µ—Ç—Å—è –æ—Å–Ω–æ–≤–Ω—ã–º –∏—Å—Ç–æ—á–Ω–∏–∫–æ–º –ø–∏—â–∏ –≤—ã–¥—Ä—ã?', '—Ä—ã–±–∞'),
//   new Question('–í–µ—Ä–Ω–æ –∏–ª–∏ –Ω–µ—Ç? –í—ã–¥—Ä—ã –±–æ–ª—å—à—É—é —á–∞—Å—Ç—å –≤—Ä–µ–º–µ–Ω–∏ –ø—Ä–æ–≤–æ–¥—è—Ç –Ω–∞ —Å—É—à–µ.', '–≤–µ—Ä–Ω–æ'),
//   new Question('–°–∫–æ–ª—å–∫–æ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –≤–∏–¥–æ–≤ –≤—ã–¥—Ä?', '13'),
//   new Question('–í–µ—Ä–Ω–æ –∏–ª–∏ –Ω–µ—Ç? –í—ã–¥—Ä—ã —Ä–æ–¥–æ–º –∏–∑ –ê–≤—Å—Ç—Ä–∞–ª–∏–∏.', '–Ω–µ—Ç'),
//   new Question('–í–µ—Ä–Ω–æ –∏–ª–∏ –Ω–µ—Ç? –í—ã–¥—Ä—ã –∏–∑–≥–æ—Ç–∞–≤–ª–∏–≤–∞—é—Ç –∏ –∏—Å–ø–æ–ª—å–∑—É—é—Ç –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã.', '–≤–µ—Ä–Ω–æ'),
//   new Question('–ö–∞–∫–æ–≤–∞ —Å—Ä–µ–¥–Ω—è—è –ø—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –∂–∏–∑–Ω–∏ –≤—ã–¥—Ä—ã –≤ –¥–∏–∫–æ–π –ø—Ä–∏—Ä–æ–¥–µ?', '10'),
//   new Question('–Ø–≤–ª—è—é—Ç—Å—è –ª–∏ –µ–Ω–æ—Ç—ã —Ç—Ä–∞–≤–æ—è–¥–Ω—ã–º–∏, –ø–ª–æ—Ç–æ—è–¥–Ω—ã–º–∏ –∏–ª–∏ –≤—Å–µ—è–¥–Ω—ã–º–∏?', '–≤—Å–µ—è–¥–Ω—ã–º–∏'),
//   new Question('–í–µ—Ä–Ω–æ –∏–ª–∏ –Ω–µ—Ç? –ï–Ω–æ—Ç—ã –≤–µ–¥—É—Ç –Ω–æ—á–Ω–æ–π –æ–±—Ä–∞–∑ –∂–∏–∑–Ω–∏.', '–≤–µ—Ä–Ω–æ'),
//   new Question('–í–µ—Ä–Ω–æ –∏–ª–∏ –Ω–µ—Ç? –ï–Ω–æ—Ç—ã –≤–ø–∞–¥–∞—é—Ç –≤ —Å–ø—è—á–∫—É.', '–Ω–µ—Ç'),
//   new Question('–í–µ—Ä–Ω–æ –∏–ª–∏ –Ω–µ—Ç? –ï–Ω–æ—Ç—ã –º–æ–≥—É—Ç –±–µ–≥–∞—Ç—å —Å–æ —Å–∫–æ—Ä–æ—Å—Ç—å—é –¥–æ 25 –∫–º –≤ —á–∞—Å.', '–≤–µ—Ä–Ω–æ'),
//   new Question('–í–µ—Ä–Ω–æ –∏–ª–∏ –Ω–µ—Ç? –ï–Ω–æ—Ç—ã –ª—é–±—è—Ç –ø–ª–∞–≤–∞—Ç—å!', '–Ω–µ—Ç'),
//   new Question('–í–µ—Ä–Ω–æ –∏–ª–∏ –Ω–µ—Ç? –°–≤–æ–µ –ø–æ—Ç–æ–º—Å—Ç–≤–æ —Å–∞–º–∫–∞ –∫–æ—Ä–º–∏—Ç 24 —Ä–∞–∑–∞ –≤ –¥–µ–Ω—å.', '–≤–µ—Ä–Ω–æ'),
//   new Question('–í–µ—Ä–Ω–æ –∏–ª–∏ –Ω–µ—Ç? –ï–Ω–æ—Ç—ã ‚Äì –æ—Ç–¥–∞–ª–µ–Ω–Ω—ã–µ —Ä–æ–¥—Å—Ç–≤–µ–Ω–Ω–∏–∫–∏ –º–µ–¥–≤–µ–¥–µ–π.', '–≤–µ—Ä–Ω–æ'),
// ];

// –°–æ–∑–¥–∞—ë–º –∫–≤–∏–∑ –∏ –∑–∞–ø—É—Å–∫–∞–µ–º –µ–≥–æ
const quiz = new Quiz(questions);
quiz.start();
